// Code generated by ent, DO NOT EDIT.

package capturelog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/ynu-e-young/htp-platform/app/machine/service/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldID, id))
}

// MachineID applies equality check predicate on the "machine_id" field. It's identical to MachineIDEQ.
func MachineID(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldMachineID, v))
}

// Pixels applies equality check predicate on the "pixels" field. It's identical to PixelsEQ.
func Pixels(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldPixels, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldArea, v))
}

// SrcName applies equality check predicate on the "src_name" field. It's identical to SrcNameEQ.
func SrcName(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldSrcName, v))
}

// ProcName applies equality check predicate on the "proc_name" field. It's identical to ProcNameEQ.
func ProcName(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldProcName, v))
}

// SrcOssURL applies equality check predicate on the "src_oss_url" field. It's identical to SrcOssURLEQ.
func SrcOssURL(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldSrcOssURL, v))
}

// ProcOssURL applies equality check predicate on the "proc_oss_url" field. It's identical to ProcOssURLEQ.
func ProcOssURL(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldProcOssURL, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// MachineIDEQ applies the EQ predicate on the "machine_id" field.
func MachineIDEQ(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldMachineID, v))
}

// MachineIDNEQ applies the NEQ predicate on the "machine_id" field.
func MachineIDNEQ(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldMachineID, v))
}

// MachineIDIn applies the In predicate on the "machine_id" field.
func MachineIDIn(vs ...uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldMachineID, vs...))
}

// MachineIDNotIn applies the NotIn predicate on the "machine_id" field.
func MachineIDNotIn(vs ...uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldMachineID, vs...))
}

// MachineIDGT applies the GT predicate on the "machine_id" field.
func MachineIDGT(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldMachineID, v))
}

// MachineIDGTE applies the GTE predicate on the "machine_id" field.
func MachineIDGTE(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldMachineID, v))
}

// MachineIDLT applies the LT predicate on the "machine_id" field.
func MachineIDLT(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldMachineID, v))
}

// MachineIDLTE applies the LTE predicate on the "machine_id" field.
func MachineIDLTE(v uuid.UUID) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldMachineID, v))
}

// PixelsEQ applies the EQ predicate on the "pixels" field.
func PixelsEQ(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldPixels, v))
}

// PixelsNEQ applies the NEQ predicate on the "pixels" field.
func PixelsNEQ(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldPixels, v))
}

// PixelsIn applies the In predicate on the "pixels" field.
func PixelsIn(vs ...int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldPixels, vs...))
}

// PixelsNotIn applies the NotIn predicate on the "pixels" field.
func PixelsNotIn(vs ...int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldPixels, vs...))
}

// PixelsGT applies the GT predicate on the "pixels" field.
func PixelsGT(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldPixels, v))
}

// PixelsGTE applies the GTE predicate on the "pixels" field.
func PixelsGTE(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldPixels, v))
}

// PixelsLT applies the LT predicate on the "pixels" field.
func PixelsLT(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldPixels, v))
}

// PixelsLTE applies the LTE predicate on the "pixels" field.
func PixelsLTE(v int64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldPixels, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v float64) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldArea, v))
}

// SrcNameEQ applies the EQ predicate on the "src_name" field.
func SrcNameEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldSrcName, v))
}

// SrcNameNEQ applies the NEQ predicate on the "src_name" field.
func SrcNameNEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldSrcName, v))
}

// SrcNameIn applies the In predicate on the "src_name" field.
func SrcNameIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldSrcName, vs...))
}

// SrcNameNotIn applies the NotIn predicate on the "src_name" field.
func SrcNameNotIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldSrcName, vs...))
}

// SrcNameGT applies the GT predicate on the "src_name" field.
func SrcNameGT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldSrcName, v))
}

// SrcNameGTE applies the GTE predicate on the "src_name" field.
func SrcNameGTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldSrcName, v))
}

// SrcNameLT applies the LT predicate on the "src_name" field.
func SrcNameLT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldSrcName, v))
}

// SrcNameLTE applies the LTE predicate on the "src_name" field.
func SrcNameLTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldSrcName, v))
}

// SrcNameContains applies the Contains predicate on the "src_name" field.
func SrcNameContains(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContains(FieldSrcName, v))
}

// SrcNameHasPrefix applies the HasPrefix predicate on the "src_name" field.
func SrcNameHasPrefix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasPrefix(FieldSrcName, v))
}

// SrcNameHasSuffix applies the HasSuffix predicate on the "src_name" field.
func SrcNameHasSuffix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasSuffix(FieldSrcName, v))
}

// SrcNameEqualFold applies the EqualFold predicate on the "src_name" field.
func SrcNameEqualFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEqualFold(FieldSrcName, v))
}

// SrcNameContainsFold applies the ContainsFold predicate on the "src_name" field.
func SrcNameContainsFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContainsFold(FieldSrcName, v))
}

// ProcNameEQ applies the EQ predicate on the "proc_name" field.
func ProcNameEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldProcName, v))
}

// ProcNameNEQ applies the NEQ predicate on the "proc_name" field.
func ProcNameNEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldProcName, v))
}

// ProcNameIn applies the In predicate on the "proc_name" field.
func ProcNameIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldProcName, vs...))
}

// ProcNameNotIn applies the NotIn predicate on the "proc_name" field.
func ProcNameNotIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldProcName, vs...))
}

// ProcNameGT applies the GT predicate on the "proc_name" field.
func ProcNameGT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldProcName, v))
}

// ProcNameGTE applies the GTE predicate on the "proc_name" field.
func ProcNameGTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldProcName, v))
}

// ProcNameLT applies the LT predicate on the "proc_name" field.
func ProcNameLT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldProcName, v))
}

// ProcNameLTE applies the LTE predicate on the "proc_name" field.
func ProcNameLTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldProcName, v))
}

// ProcNameContains applies the Contains predicate on the "proc_name" field.
func ProcNameContains(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContains(FieldProcName, v))
}

// ProcNameHasPrefix applies the HasPrefix predicate on the "proc_name" field.
func ProcNameHasPrefix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasPrefix(FieldProcName, v))
}

// ProcNameHasSuffix applies the HasSuffix predicate on the "proc_name" field.
func ProcNameHasSuffix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasSuffix(FieldProcName, v))
}

// ProcNameEqualFold applies the EqualFold predicate on the "proc_name" field.
func ProcNameEqualFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEqualFold(FieldProcName, v))
}

// ProcNameContainsFold applies the ContainsFold predicate on the "proc_name" field.
func ProcNameContainsFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContainsFold(FieldProcName, v))
}

// SrcOssURLEQ applies the EQ predicate on the "src_oss_url" field.
func SrcOssURLEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldSrcOssURL, v))
}

// SrcOssURLNEQ applies the NEQ predicate on the "src_oss_url" field.
func SrcOssURLNEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldSrcOssURL, v))
}

// SrcOssURLIn applies the In predicate on the "src_oss_url" field.
func SrcOssURLIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldSrcOssURL, vs...))
}

// SrcOssURLNotIn applies the NotIn predicate on the "src_oss_url" field.
func SrcOssURLNotIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldSrcOssURL, vs...))
}

// SrcOssURLGT applies the GT predicate on the "src_oss_url" field.
func SrcOssURLGT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldSrcOssURL, v))
}

// SrcOssURLGTE applies the GTE predicate on the "src_oss_url" field.
func SrcOssURLGTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldSrcOssURL, v))
}

// SrcOssURLLT applies the LT predicate on the "src_oss_url" field.
func SrcOssURLLT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldSrcOssURL, v))
}

// SrcOssURLLTE applies the LTE predicate on the "src_oss_url" field.
func SrcOssURLLTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldSrcOssURL, v))
}

// SrcOssURLContains applies the Contains predicate on the "src_oss_url" field.
func SrcOssURLContains(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContains(FieldSrcOssURL, v))
}

// SrcOssURLHasPrefix applies the HasPrefix predicate on the "src_oss_url" field.
func SrcOssURLHasPrefix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasPrefix(FieldSrcOssURL, v))
}

// SrcOssURLHasSuffix applies the HasSuffix predicate on the "src_oss_url" field.
func SrcOssURLHasSuffix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasSuffix(FieldSrcOssURL, v))
}

// SrcOssURLEqualFold applies the EqualFold predicate on the "src_oss_url" field.
func SrcOssURLEqualFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEqualFold(FieldSrcOssURL, v))
}

// SrcOssURLContainsFold applies the ContainsFold predicate on the "src_oss_url" field.
func SrcOssURLContainsFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContainsFold(FieldSrcOssURL, v))
}

// ProcOssURLEQ applies the EQ predicate on the "proc_oss_url" field.
func ProcOssURLEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldProcOssURL, v))
}

// ProcOssURLNEQ applies the NEQ predicate on the "proc_oss_url" field.
func ProcOssURLNEQ(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldProcOssURL, v))
}

// ProcOssURLIn applies the In predicate on the "proc_oss_url" field.
func ProcOssURLIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldProcOssURL, vs...))
}

// ProcOssURLNotIn applies the NotIn predicate on the "proc_oss_url" field.
func ProcOssURLNotIn(vs ...string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldProcOssURL, vs...))
}

// ProcOssURLGT applies the GT predicate on the "proc_oss_url" field.
func ProcOssURLGT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldProcOssURL, v))
}

// ProcOssURLGTE applies the GTE predicate on the "proc_oss_url" field.
func ProcOssURLGTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldProcOssURL, v))
}

// ProcOssURLLT applies the LT predicate on the "proc_oss_url" field.
func ProcOssURLLT(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldProcOssURL, v))
}

// ProcOssURLLTE applies the LTE predicate on the "proc_oss_url" field.
func ProcOssURLLTE(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldProcOssURL, v))
}

// ProcOssURLContains applies the Contains predicate on the "proc_oss_url" field.
func ProcOssURLContains(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContains(FieldProcOssURL, v))
}

// ProcOssURLHasPrefix applies the HasPrefix predicate on the "proc_oss_url" field.
func ProcOssURLHasPrefix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasPrefix(FieldProcOssURL, v))
}

// ProcOssURLHasSuffix applies the HasSuffix predicate on the "proc_oss_url" field.
func ProcOssURLHasSuffix(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldHasSuffix(FieldProcOssURL, v))
}

// ProcOssURLEqualFold applies the EqualFold predicate on the "proc_oss_url" field.
func ProcOssURLEqualFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEqualFold(FieldProcOssURL, v))
}

// ProcOssURLContainsFold applies the ContainsFold predicate on the "proc_oss_url" field.
func ProcOssURLContainsFold(v string) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldContainsFold(FieldProcOssURL, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.CaptureLog {
	return predicate.CaptureLog(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CaptureLog) predicate.CaptureLog {
	return predicate.CaptureLog(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CaptureLog) predicate.CaptureLog {
	return predicate.CaptureLog(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CaptureLog) predicate.CaptureLog {
	return predicate.CaptureLog(func(s *sql.Selector) {
		p(s.Not())
	})
}
